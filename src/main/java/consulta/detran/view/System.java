/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package consulta.detran.view;

import com.DeathByCaptcha.Exception;
import consulta.detran.AutenticationType;
import consulta.detran.LoginsSpreadSheetReader;
import consulta.detran.Motorista;
import consulta.detran.ParserAcess;
import consulta.detran.SpreadSheetGenerator;
import consulta.detran.ValidadorCPF;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.xml.parsers.ParserConfigurationException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;

/**
 *
 * @author Torres
 */
public class System extends javax.swing.JFrame {

    String login;
    String senha;
    String diretorioString;
    String dirSaidaString;
    AutenticationType autentication = new AutenticationType();
    List<Motorista> motoristas = new ArrayList<>();
    int i = 0;

    /**
     * Creates new form system
     */
    public System() throws IOException, ParserConfigurationException, FileNotFoundException, InvalidFormatException, MalformedURLException, Exception, InterruptedException {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    public void setLogin(String login) {
        this.login = login;
    }

    public void setSenha(String senha) {
        this.senha = senha;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooser = new javax.swing.JFileChooser();
        captchaSolution = new javax.swing.ButtonGroup();
        funcionariosGroup = new javax.swing.ButtonGroup();
        gerarExtratoGroup = new javax.swing.ButtonGroup();
        progressBar = new javax.swing.JProgressBar();
        entrada = new javax.swing.JLabel();
        dirEntrada = new javax.swing.JButton();
        executar = new javax.swing.JButton();
        csvJR = new javax.swing.JRadioButton();
        xlsxJR = new javax.swing.JRadioButton();
        automaticoJR = new javax.swing.JRadioButton();
        manualJR = new javax.swing.JRadioButton();
        formatoSaida = new javax.swing.JLabel();
        captchaLabel = new javax.swing.JLabel();
        gerarExtratoLabel = new javax.swing.JLabel();
        completoJR = new javax.swing.JRadioButton();
        dozeMesesJR = new javax.swing.JRadioButton();
        funcLabel = new javax.swing.JLabel();
        todosJR = new javax.swing.JRadioButton();
        emriscoJR = new javax.swing.JRadioButton();
        irregularesJR = new javax.swing.JRadioButton();
        cincoAnosJR = new javax.swing.JRadioButton();

        captchaSolution.add(manualJR);
        captchaSolution.add(automaticoJR);

        funcionariosGroup.add(emriscoJR);
        funcionariosGroup.add(todosJR);
        funcionariosGroup.add(irregularesJR);

        //gerarExtratoGroup.add(completoJR);
        //gerarExtratoGroup.add(dozeMesesJR);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hungaro - Consulta Detran");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(430, 100));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        progressBar.setVisible(false);
        progressBar.setBackground(new java.awt.Color(153, 153, 153));
        progressBar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        progressBar.setForeground(new java.awt.Color(131, 255, 0));
        progressBar.setMaximum(3);
        progressBar.setToolTipText("");
        progressBar.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        progressBar.setPreferredSize(new java.awt.Dimension(150, 17));
        progressBar.setStringPainted(true);
        getContentPane().add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 310, 25));

        entrada.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        entrada.setText("Selecione a planilha de entrada :");
        getContentPane().add(entrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        dirEntrada.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dirEntrada.setText("Diretório entrada");
        dirEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dirEntradaActionPerformed(evt);
            }
        });
        getContentPane().add(dirEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 11, -1, -1));

        executar.setRolloverEnabled(true);
        executar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        executar.setVisible(false);
        executar.setText("Executar");
        executar.setPreferredSize(new java.awt.Dimension(150, 25));
        executar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executarActionPerformed(evt);
            }
        });
        executar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                executarKeyTyped(evt);
            }
        });
        getContentPane().add(executar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 100, -1));

        csvJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        csvJR.setText(".csv");
        csvJR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvJRActionPerformed(evt);
            }
        });
        getContentPane().add(csvJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, -1, -1));

        xlsxJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xlsxJR.setText(".xlsx");
        xlsxJR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xlsxJRActionPerformed(evt);
            }
        });
        getContentPane().add(xlsxJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, -1, -1));

        automaticoJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        automaticoJR.setText("Automático");
        automaticoJR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automaticoJRActionPerformed(evt);
            }
        });
        getContentPane().add(automaticoJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        manualJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        manualJR.setText("Manual");
        manualJR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualJRActionPerformed(evt);
            }
        });
        getContentPane().add(manualJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, -1));

        formatoSaida.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        formatoSaida.setText("Formato de saída :");
        getContentPane().add(formatoSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 160, -1));

        captchaLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        captchaLabel.setText("Solução do captcha :");
        getContentPane().add(captchaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 150, 17));

        gerarExtratoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gerarExtratoLabel.setText("Gerar extrato (.pdf) :");
        getContentPane().add(gerarExtratoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        completoJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        completoJR.setText("Completo");
        completoJR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completoJRActionPerformed(evt);
            }
        });
        getContentPane().add(completoJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, -1));

        dozeMesesJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dozeMesesJR.setText("Últimos 12 meses");
        getContentPane().add(dozeMesesJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, -1, -1));

        funcLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        funcLabel.setText("Funcionários :");
        getContentPane().add(funcLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 136, -1, -1));

        todosJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todosJR.setText("Todos");
        getContentPane().add(todosJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, -1, -1));

        emriscoJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        emriscoJR.setText("Em risco");
        getContentPane().add(emriscoJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, -1, -1));

        irregularesJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        irregularesJR.setText("Irregulares");
        irregularesJR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irregularesJRActionPerformed(evt);
            }
        });
        getContentPane().add(irregularesJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, -1, -1));

        cincoAnosJR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cincoAnosJR.setText("Últimos 5 anos");
        getContentPane().add(cincoAnosJR, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dirEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dirEntradaActionPerformed
        chooser.showOpenDialog(this);
        try {
            if (chooser.getSelectedFile().toString() != null) {
                executar.setVisible(true);
                progressBar.setVisible(true);
            }

        } catch (NullPointerException e) {
        }
    }//GEN-LAST:event_dirEntradaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened


    }//GEN-LAST:event_formWindowOpened

    private void executarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executarActionPerformed

        LoginsSpreadSheetReader autenticacao = new LoginsSpreadSheetReader();
        ParserAcess parser = new ParserAcess();
//        ValidadorCPF validador = new ValidadorCPF();

        String mainFolder = parser.criaPastaPrincipal(chooser.getCurrentDirectory().toString());

        if (dozeMesesJR.isSelected()) {
            parser.criaPasta12Meses(chooser.getCurrentDirectory().toString() + mainFolder);
        }
        if (cincoAnosJR.isSelected()) {
            parser.criaPasta5Anos(chooser.getCurrentDirectory().toString() + mainFolder);
        }
        if (completoJR.isSelected()) {
            parser.criaPastaCompleto(chooser.getCurrentDirectory().toString() + mainFolder);
        }

        if (chooser.getSelectedFile().toString() != null) {

            try {
                autenticacao.lePlanilhaLogins(chooser.getSelectedFile().toString());
//                int i = 0;
                progressBar.setValue(0);
                while (i < autenticacao.getMotoristas().size()) {

                    parser = new ParserAcess(
                            login,
                            senha,
                            chooser.getSelectedFile().toString(),
                            chooser.getCurrentDirectory().toString(),
                            autenticacao.getMotoristas().get(i).getCNH(),
                            autenticacao.getMotoristas().get(i).getCPF(),
                            autenticacao.getMotoristas().get(i).getValidadeCNH());//Cria uma lista os valores extraidos

                    motoristas.add(parser.run());
                    if (parser.validaEntrada() == 0) {
                        if (dozeMesesJR.isSelected()) {
                            parser.gerarExtrato12Meses(chooser.getCurrentDirectory().toString() + mainFolder);
                        }
                        if (cincoAnosJR.isSelected()) {
                            parser.gerarExtrato5Anos(chooser.getCurrentDirectory().toString() + mainFolder);
                        }
                        if (completoJR.isSelected()) {
                            parser.gerarExtratoCompleto(chooser.getCurrentDirectory().toString() + mainFolder);
                        }
                    }
                    progressBar.setValue(i);

                    i++;

                }

                SpreadSheetGenerator gerador = new SpreadSheetGenerator(chooser.getCurrentDirectory().toString() + mainFolder, completoJR.isSelected(), dozeMesesJR.isSelected(), cincoAnosJR.isSelected());//Escreve os dados na planilha
//                SpreadSheetGenerator gerador = new SpreadSheetGenerator(chooser.getCurrentDirectory().toString());//Escreve os dados na planilha
                gerador.geraPlanilha(chooser.getCurrentDirectory().toString(), motoristas, csvJR.isSelected(), xlsxJR.isSelected(), todosJR.isSelected(), emriscoJR.isSelected(), irregularesJR.isSelected());
                motoristas.removeAll(motoristas);

            } catch (IOException | ParserConfigurationException | Exception | NullPointerException | InterruptedException ex) {
                Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
            }

            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "A execução terminou!");
        } else {
            JOptionPane.showMessageDialog(null, "Defina corretamente os diretórios");
//            dispose();
//            new System().setVisible(true);
        }
    }//GEN-LAST:event_executarActionPerformed

    private void executarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_executarKeyTyped

    }//GEN-LAST:event_executarKeyTyped

    private void csvJRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvJRActionPerformed

    }//GEN-LAST:event_csvJRActionPerformed

    private void automaticoJRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automaticoJRActionPerformed


    }//GEN-LAST:event_automaticoJRActionPerformed

    private void manualJRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualJRActionPerformed


    }//GEN-LAST:event_manualJRActionPerformed

    private void xlsxJRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xlsxJRActionPerformed


    }//GEN-LAST:event_xlsxJRActionPerformed

    private void irregularesJRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irregularesJRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_irregularesJRActionPerformed

    private void completoJRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completoJRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_completoJRActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.alee.laf.WebLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        SwingUtilities.invokeLater(new Runnable() {
//        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                progressBar.setValue(i);
                try {
                    System system = new System();
                    system.setResizable(false);
                    system.setSize(430, 100);
                    system.setVisible(true);

                } catch (IOException | ParserConfigurationException | InvalidFormatException | Exception | InterruptedException ex) {
                    Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
//        }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton automaticoJR;
    private javax.swing.JLabel captchaLabel;
    private javax.swing.ButtonGroup captchaSolution;
    private javax.swing.JFileChooser chooser;
    private javax.swing.JRadioButton cincoAnosJR;
    private javax.swing.JRadioButton completoJR;
    private javax.swing.JRadioButton csvJR;
    private javax.swing.JButton dirEntrada;
    private javax.swing.JRadioButton dozeMesesJR;
    private javax.swing.JRadioButton emriscoJR;
    private javax.swing.JLabel entrada;
    private javax.swing.JButton executar;
    private javax.swing.JLabel formatoSaida;
    private javax.swing.JLabel funcLabel;
    private javax.swing.ButtonGroup funcionariosGroup;
    private javax.swing.ButtonGroup gerarExtratoGroup;
    private javax.swing.JLabel gerarExtratoLabel;
    private javax.swing.JRadioButton irregularesJR;
    private javax.swing.JRadioButton manualJR;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JRadioButton todosJR;
    private javax.swing.JRadioButton xlsxJR;
    // End of variables declaration//GEN-END:variables
}
